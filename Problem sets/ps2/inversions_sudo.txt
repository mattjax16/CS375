1 def inversionCount(A):
2   if len(a) == 1:
3       return (A, 0)
4   else:
5       (B, I1) = inversionCount(A[1:n/2])
6       (C, I2) = inversionCount(A[n/2:n])
7       Initialize i = 0 and j = 0 as the start of B and C
8       Initialize sortedA as an empty list
9       Initialize I3 as 0
10      while the ends of both B and C are not reached:
11      if B[i] < C[j]:
12          Add B[i] to sortedA and increment i
13      else if 3*B[i] > C[j]:
14          Add C[j] to sortedA, increment j,
15          and increase I3 by len(B)-i
16      else: # If they are equal
17           Add C[j] to sortedA and increment j
18           Add whatever is left in B and C to sortedA
19   return (sortedA, I1 + I2 + I3)